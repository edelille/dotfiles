"
"  Welcome to the Lam's .vimrc file!
"  Created: August 2023
"  Purpose: Synchronization
"  Notes:
"    - Tabbing in certain other autogenerated vimrc files are bad
"
"  To use: simply link this .vimrc file to where your vim loads it!
"



"##############################################################################
"
"                           BASE VIMRC SETTINGS
"
"##############################################################################

" Default styling
set autoindent      " indentation is auto applied on <ENTER>
set expandtab       " Uses "spaces" instead of "tab"s
set tabstop=4       " tabstops are the lineindents
set shiftwidth=4    " shiftwidth is controlled by manual indents

set number          " enables line numbers
set nowrap          " Do not wrap the lines, let them trail
set scrolloff=3     " Do not let cursor scroll below or above n lines(?) TODO

" Searching
set incsearch       " Allows incremental highlighting on search terms with "/"
set hlsearch        " Allows highlighting on all results after search
set ignorecase      " Ignores case during searches
set smartcase       " Overrides the ignorecase when searching capital letters
set showmatch       " Show matching words during a search TODO
set matchtime=3     " speeds up showmatch

" Command Palette
set showcmd         " Shows partial command as you type TODO
set showmode        " Shows the mode on the last line TODO
set history=1000    " Sets the amount of history stored of previous VIM cmd
set wildmenu        " Sets autocompletion
set wildmode=list:longest,list:full

" Status bar
set laststatus=1

" Compatibility fixes
set nocompatible

" Filetype handling
filetype on         " enables filetype detection
filetype plugin on  " enables plugins for the detected filetype
filetype indent on  " enables indent loading for detected filetype

" Syntax
syntax on           " enables syntax highlighting

" Shortcuts
" Leader is the "\" backslach key by default
nnoremap <Leader>ve :e $MYVIMRC<CR>
nnoremap <Leader>vr :so $MYVIMRC<CR>

" Backup settings
set nobackup        " backup files are not as necessary, swap files are however



" Clipboard
if has('unnamedplus')
    set clipboard=unnamed,unnamedplus
endif

noremap YY "+y<CR>
noremap <leader>p "+gy<CR>
noremap XX "+x<CR>

" Abbreviations for common typos
cnoreabbrev W! w!
cnoreabbrev Q! q!
cnoreabbrev Qall! qall!
cnoreabbrev Wq wq
cnoreabbrev Wa wa
cnoreabbrev wQ wq
cnoreabbrev WQ wq
cnoreabbrev W w
cnoreabbrev Q q
cnoreabbrev Qall qall

"##############################################################################
"
"                                 PLUGINS
"
"##############################################################################
" Auto install vim-plug if not exist
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
    silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Auto install vim-plug plugins if not installed
autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
  \| PlugInstall --sync | source $MYVIMRC
\| endif

nnoremap <leader>pi :PlugInstall<CR>

"##############################################################################
"                              LOADING PLUGINS
"##############################################################################
call plug#begin()

" Nerdtree and plugins of Nerdtree
Plug 'preservim/nerdtree'
Plug 'xuyuanp/nerdtree-git-plugin'
Plug 'ryanoasis/vim-devicons'
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'
Plug 'PhilRunninger/nerdtree-buffer-ops'
Plug 'PhilRunninger/nerdtree-visual-selection'
nnoremap <silent> <F3> :NERDTreeToggle<CR>

" Stylistic
Plug 'Yggdroot/indentLine'          " This will contribute a | to the indents
let g:indentLine_char = '|'

Plug 'sainnhe/sonokai'              " Our theme!
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
if has('termguicolors')
  set termguicolors
endif
let g:sonokai_style = 'atlantis'
let g:sonokai_better_performance = 1
colorscheme sonokai

" vim-airline is the status bar at the bottom
Plug 'vim-airline/vim-airline'       
Plug 'vim-airline/vim-airline-themes'
let g:airline_theme = 'violet'
let g:airline#extensions#branch#enabled = 1
let g:airline#extensions#ale#enabled = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tagbar#enabled = 1
let g:airline_skip_empty_sections = 1

" Syntax
Plug 'dense-analysis/ale'           " Async Lint Engine
let g:ale_linters = {}
Plug 'tpope/vim-commentary'         " Allows blocks of code commenting
Plug 'tpope/vim-fugitive'           " Git Status
Plug 'sheerun/vim-polyglot'         " Syntax highlighting for all the languages

call plug#end()
